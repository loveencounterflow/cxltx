// Generated by CoffeeScript 1.6.3
(function() {
  var CXLTX, TRM, TYPES, alert, app, badge, debug, express, help, info, log, main, njs_url, rpr, server_options, view, warn, whisper, _echo,
    __slice = [].slice;

  njs_url = require('url');

  TYPES = require('coffeenode-types');

  TRM = require('coffeenode-trm');

  rpr = TRM.rpr.bind(TRM);

  badge = 'CXLTX/server';

  log = TRM.get_logger('plain', badge);

  info = TRM.get_logger('info', badge);

  whisper = TRM.get_logger('whisper', badge);

  debug = TRM.get_logger('debug', badge);

  alert = TRM.get_logger('alert', badge);

  warn = TRM.get_logger('warn', badge);

  help = TRM.get_logger('help', badge);

  _echo = TRM.echo.bind(TRM);

  express = require('express');

  CXLTX = require('./main');

  server_options = {
    'host': '127.0.0.1',
    'port': 8910
  };

  this.decode_unicode = function(text) {

    /* The `Buffer ... toString` steps below decode literal UTF-8 in the request */

    /* TAINT the NodeJS docs say: [the 'binary'] encoding method is deprecated and should be avoided
      [...] [it] will be removed in future versions of Node
     */
    return (new Buffer(text, 'binary')).toString('utf-8');
  };

  this.main = function() {
    var process_request;
    process_request = (function(_this) {
      return function(request, response, handler) {
        var P, command, jobname, method_name, parameters, texroute, _ref;
        debug('©45f request.params:        ', request.params);
        _ref = request.params, texroute = _ref.texroute, jobname = _ref.jobname, command = _ref.command, parameters = _ref.parameters;
        debug('©45f url:        ', request['url']);
        debug('©45f texroute:   ', texroute);
        debug('©45f jobname:    ', jobname);
        debug('©45f command:    ', command);
        debug('©45f parameters: ', parameters);

        /* TAINT rewrite as middleware */
        if (!((texroute != null) && (command != null))) {
          return handler("need 2 or 3 parts in URL route");
        }
        method_name = command.replace(/-/g, '_');

        /* TAINT code duplication */

        /* This should perhaps be done with slashes as well */
        P = (parameters != null) && parameters.length > 0 ? (_this.decode_unicode(parameters)).split(',') : [];
        debug('©45f P:          ', P);
        CXLTX.dispatch.apply(CXLTX, [texroute, jobname, method_name].concat(__slice.call(P), [handler]));
        return null;
      };
    })(this);
    return (function(_this) {
      return function(request, response) {
        return process_request(request, response, function(error, result) {
          var headers, status;
          if (error != null) {
            if ((TYPES.type_of(error)) !== 'text') {
              error = rpr(error);
            }
            response.writeHeader(500, {
              'Content-Type': 'text/plain'
            });
            warn('©23 error:', error);
            response.write(error);
            return response.end();
          }
          whisper('©23 result:', result);
          status = 200;
          headers = {
            'Content-Type': 'text/plain'
          };
          response.writeHeader(status, headers);
          response.write(result);
          return response.end();
        });
      };
    })(this);
  };

  app = express();

  view = this.main();

  app.use(express.logger({
    'format': 'dev'
  }));

  main = this.main();

  app.get('/:texroute/:jobname/:command/:parameters', main);

  app.get('/:texroute/:jobname/:command', main);

  app.listen(server_options['port'], function(error) {
    if (error != null) {
      throw error;
    }
    return log(TRM.green("listening to " + server_options['host'] + ":" + server_options['port']));
  });

}).call(this);
